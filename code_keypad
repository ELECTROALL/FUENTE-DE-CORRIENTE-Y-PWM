
#include <Wire.h>
#include <LiquidCrystal_I2C.h> // Debe descargar la Libreria que controla el I2C
LiquidCrystal_I2C lcd(0x27, 16, 2);

#include <Keypad.h>
const byte COLUMNAS = 3;
const byte FILAS    = 4;
char teclas [FILAS] [COLUMNAS] = {
  {'1', '2', '3'},
  {'4', '5', '6'},
  {'7', '8', '9'},
  {'*', '0', '#'}
};
byte filasPines[FILAS]       = {2, 3, 4, 5}; //Define lineas
byte columnasPines[COLUMNAS] = {12, 7, 8}; //Define columnas
Keypad miTeclado = Keypad( makeKeymap(teclas), filasPines, columnasPines, FILAS, COLUMNAS );// sincronizacion de las teclas

boolean valorActual1 = false;
String  numero1;
long   calculoTotal1;

boolean valorActual2 = false;
String  numero2;
long   calculoTotal2;

boolean valorActual3 = false;
String  numero3;
long   calculoTotal3;

boolean valorActual4 = false;
String  numero4;
long   calculoTotal4;

int jump = 1;


//SALIDAS PARA CORRIENTE 4-20mA
int I_OUT0 = 6;
int I_OUT1 = 9;

//SALIDAS PARA PWM 0-10V Ã“ 0-24V
int PWM_OUT0 = 10;
int PWM_OUT1 = 11;

//SALIDAS DE PULSOS Y FRECUENCIAS 0-5V (Salida directa)
int PULSE0 = 13;
int PULSE1 = 14;
int PULSE2 = 15;

void setup() {
  Wire.begin();
  lcd.init();
  lcd.backlight();
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("I0=    I1=");
  lcd.setCursor(3, 0);
  lcd.blink();
  lcd.setCursor(0, 1);
  lcd.print("P0=    P1=");

  pinMode(I_OUT0, OUTPUT);
  pinMode(I_OUT1, OUTPUT);
  pinMode(PWM_OUT0, OUTPUT);
  pinMode(PWM_OUT1, OUTPUT);
  pinMode(PULSE0, OUTPUT);
  pinMode(PULSE1, OUTPUT);
  pinMode(PULSE2, OUTPUT);

}

void loop()
{
  char tecla = miTeclado.getKey();
  int longitudDelNumero1 = 0;
  int longitudDelNumero2;
  int longitudDelNumero3;
  int longitudDelNumero4;

  int AO0;
  byte AO1;
  byte pwm0;
  byte pwm1;

  if (tecla != NO_KEY && (tecla == '1' || tecla == '2' || tecla == '3' || tecla == '4' || tecla == '5' || tecla == '6' || tecla == '7' || tecla == '8' || tecla == '9' || tecla == '0'))
  {
    if (jump == 1) {
      if (valorActual1 != true) {
        // lcd.blink();
        numero1 = numero1 + tecla;
        longitudDelNumero1 = numero1.length();
        lcd.setCursor(0, 0);
        lcd.print("I0=");
        lcd.setCursor(3, 0);
        lcd.print(numero1);
      }
    }
    ///////////
    if (jump == 2) {
      if (valorActual2 != true) {
        //lcd.blink();
        numero2 = numero2 + tecla;
        longitudDelNumero2 = numero2.length();
        lcd.setCursor(7, 0);
        lcd.print("I1=");
        lcd.setCursor(10, 0);
        lcd.print(numero2);
      }
    }
    //////////
    if (jump == 3) {
      if (valorActual3 != true) {
        //lcd.blink();
        numero3 = numero3 + tecla;
        longitudDelNumero3 = numero3.length();
        lcd.setCursor(0, 1);
        lcd.print("P0=");
        lcd.setCursor(3, 1);
        lcd.print(numero3);
      }
    }
    ////////
    if (jump == 4) {
      if (valorActual4 != true) {
        //lcd.blink();
        numero4 = numero4 + tecla;
        longitudDelNumero4 = numero4.length();
        lcd.setCursor(7, 1);
        lcd.print("P1=");
        lcd.setCursor(10, 1);
        lcd.print(numero4);
      }
    }
    // lcd.blink();
  }


  else if ((tecla == '#') && (valorActual1 || valorActual2 || valorActual3 || valorActual4 == false && tecla != NO_KEY)) {

    if (jump == 1) {

      valorActual1 = true;
      calculoTotal1 = numero1.toInt();
      lcd.setCursor(0, 0);
      lcd.print("I0=");
      lcd.setCursor(3, 0);
      lcd.print(calculoTotal1);
      //lcd.blink();
      //lcd.noAutoscroll();
    }
    if (jump == 2) {
      valorActual2 = true;
      calculoTotal2 = numero2.toInt();
      lcd.setCursor(7, 0);
      lcd.print("I1=");
      lcd.setCursor(10, 0);
      lcd.print(calculoTotal2);
      //lcd.blink();
      //lcd.noAutoscroll();
    }
    if (jump == 3) {
      //lcd.blink();
      valorActual3 = true;
      calculoTotal3 = numero3.toInt();
      lcd.setCursor(0, 1);
      lcd.print("P0=");
      lcd.setCursor(3, 1);
      lcd.print(calculoTotal3);
      //lcd.noAutoscroll();
    }
    if (jump == 4) {
      //lcd.blink();
      valorActual4 = true;
      calculoTotal4 = numero4.toInt();
      lcd.setCursor(7, 1);
      lcd.print("P1=");
      lcd.setCursor(10, 1);
      lcd.print(calculoTotal4);
      //lcd.noAutoscroll();
    }
    jump++;
    lcd.blink();
    if (jump == 5) {
      jump = 1;
    }
  }
  else if (tecla == '*' && tecla != NO_KEY) {

    if (jump == 1) {
      lcd.clear();
      valorActual1 = false;
      numero1 = "";
      calculoTotal1 = 0;
    }

    if (jump == 2) {
      lcd.clear();
      valorActual2 = false;
      numero2 = "";
      calculoTotal2 = 0;
    }

    if (jump == 3) {
      lcd.clear();
      valorActual3 = false;
      numero3 = "";
      calculoTotal3 = 0;
    }

    if (jump == 4) {
      lcd.clear();
      valorActual4 = false;
      numero4 = "";
      calculoTotal4 = 0;
    }

    lcd.setCursor(0, 0);
    lcd.print("I0=");
    lcd.setCursor(3, 0);
    lcd.print(numero1);

    lcd.setCursor(7, 0);
    lcd.print("I1=");
    lcd.setCursor(10, 0);
    lcd.print(numero2);

    lcd.setCursor(0, 1);
    lcd.print("P0=");
    lcd.setCursor(3, 1);
    lcd.print(numero3);

    lcd.setCursor(7, 1);
    lcd.print("P1=");
    lcd.setCursor(10, 1);
    lcd.print(numero4);
  }

  //int AO00 = map(calculoTotal1, 0, 22, 0, 20);
  AO0 = map(calculoTotal1, 0, 23, 0, 255);
  AO1 = map(calculoTotal2, 0, 23, 0, 255);
  pwm0 = map(calculoTotal3, 0, 10, 0, 255);
  pwm1 = map(calculoTotal4, 0, 10, 0, 255);

  analogWrite(I_OUT0, AO0);
  analogWrite(I_OUT1, AO1);
  analogWrite(PWM_OUT0, pwm0);
  analogWrite(PWM_OUT1, pwm1);

  /*AO0 = map(analogRead(A2), 0, 1023, 0, 255);
        analogWrite(I_OUT0,AO0);
        analogWrite(I_OUT1,AO0);
        analogWrite(PWM_OUT0,AO0);
        analogWrite(PWM_OUT1,AO0);*/
}
